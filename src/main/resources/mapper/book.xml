<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 패키지 포함한 mapper(DAO interface) 이름으로 설정 한다. -->
<mapper namespace="com.uplus.eureka.book.model.dao.BookDao">

	<!-- 자주 사용하는 쿼리를 상용구 처럼 sql 태그를 이용해서 등록해서 재사용할 수 있다. -->
	<sql id="searchCon">
		<if test="word !=null and word!='' ">
			<choose>
				<when test="key == 'isbn' ">
					isbn = #{word}
				</when>
				<when test="key == 'title'">
					title like concat('%',#{word},'%')
				</when>
				<when test="key == 'author'">
					author like concat('%',#{word},'%')
				</when>
			</choose>
		</if>
	</sql>

	<!-- id : mapping될 함수 이름으로 설정 parameterType : 메서드 인자 타입 resultType : 쿼리를 
		수행한 결과(컬럼 데이타)를 담을 클래스 타입 -->
	<select id="searchAll" parameterType="PageBean"
		resultType="Book">
		select isbn, title, author, price, describ, img from book
		<where>
			<include refid="searchCon"/>
		</where>
		order by isbn
		limit #{start}, #{interval}
	</select>
	<select id="totalCount" parameterType="PageBean"
		resultType="int">
		select count(*) from book
		<where>
			<include refid="searchCon"/>
		</where>
	</select>

	<select id="search" parameterType="string" resultType="Book">
		select
		isbn, title, author, price, describ, img from book
		where isbn = #{isbn}
	</select>

	<update id="update" parameterType="Book">
		update book set
		title=#{title}, author=#{author}, price=#{price}, describ=#{describ}
		where isbn =#{isbn}
	</update>

	<update id="insert" parameterType="Book">
		insert into book (isbn, title,
		author, price, describ)
		values(#{isbn}, #{title}, #{author} ,#{price},
		#{describ})
	</update>

	<update id="remove" parameterType="string">
		delete from book where isbn =
		#{isbn}
	</update>

</mapper>


